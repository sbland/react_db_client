/**
 * this is the main configuration file of your bit workspace.
 * for full documentation, please see: https://harmony-docs.bit.dev/workspace/configurations
 **/{
  "$schema": "https://static.bit.dev/teambit/schemas/schema.json",
  /**
   * main configuration of the Bit workspace.
   **/
  "teambit.workspace/workspace": {
    /**
     * the name of the component workspace. used for development purposes.
     **/
    "name": "react_db_client",
    /**
     * set the icon to be shown on the Bit server.
     **/
    "icon": "https://static.bit.dev/bit-logo.svg",
    /**
     * default directory to place a component during `bit import` and `bit create`.
     * the following placeholders are available:
     * name - component name includes namespace, e.g. 'ui/button'.
     * scopeId - full scope-id includes the owner, e.g. 'teambit.compilation'.
     * scope - scope name only, e.g. 'compilation'.
     * owner - owner name in bit.dev, e.g. 'teambit'.
     **/
    "defaultDirectory": "{scope}/{name}",
    /**
     * default scope for all components in workspace.
     **/
    "defaultScope": "samnbuk.react_db_client"
  },
  /**
   * Templates
   **/
  "teambit.generator/generator": {
    "aspects": [
      "samnbuk.react_db_client/generator/stylesheet",
      "samnbuk.react_db_client/generator/helper",
      "samnbuk.react_db_client/generator/field-template"
    ]
  },
  "samnbuk.react_db_client/generator/stylesheet": {},
  "samnbuk.react_db_client/generator/helper": {},
  "samnbuk.react_db_client/generator/field-template": {},
  /**
   * main configuration for component dependency resolution.
   **/
  "teambit.dependencies/dependency-resolver": {
    /**
     * choose the package manager for Bit to use. you can choose between 'yarn', 'pnpm'
     */
    "packageManager": "teambit.dependencies/pnpm",
    "policy": {
      "dependencies": {
        "@teambit/design.ui.external-link": "0.0.344",
        "@teambit/documenter.theme.theme-compositions": "4.1.1",
        "@teambit/documenter.ui.copy-box": "4.1.1",
        "@teambit/eslint-config-bit-react": "~0.0.367",
        "@teambit/harmony": "0.2.11",
        "@teambit/react.templates.themes.theme": "0.0.4",
        "@typescript-eslint/eslint-plugin": "4.29.3",
        "classnames": "2.3.1",
        "enzyme": "3.11.0",
        "enzyme-adapter-react-16": "1.15.6",
        "enzyme-to-json": "3.6.2",
        "eslint-import-resolver-node": "0.3.6",
        "eslint-plugin-import": "2.22.1",
        "eslint-plugin-jest": "24.4.0",
        "eslint-plugin-jsx-a11y": "6.4.1",
        "eslint-plugin-mdx": "1.15.0",
        "eslint-plugin-react": "7.25.1",
        "react-json-view": "1.21.3",
        "react-router-dom": "^5.0.1",
        "react-test-renderer": "16.14.0",
        "react-window": "1.8.6",
        "snapshot-diff": "0.9.0"
      },
      "peerDependencies": {
        "@testing-library/react": "12.0.0",
        "@testing-library/react-hooks": "^7.0.2",
        "lodash": "^4.17.11",
        "prop-types": "^15.6.1",
        "react": "16.14.0",
        "react-dom": "16.14.0"
      }
    },
    "packageManagerArgs": [],
    "devFilePatterns": [
      "**/*.spec.ts"
    ],
    "strictPeerDependencies": true,
    "installFromBitDevRegistry": true,
    "savePrefix": ""
  },
  /**
   * workspace variants allow to set different subsets of configuration for components in your
   * workspace. this is extremely useful for upgrading, aligning and building components with a new
   * set of dependencies. a rule can be a directory or a component-id/namespace, in which case,
   * wrap the rule with curly brackets (e.g. `"{ui/*}": {}`)
   * see https://harmony-docs.bit.dev/aspects/variants for more info.
   **/
  "teambit.workspace/variants": {
    "{themes/**}": {
      "teambit.react/react": {}
    },
    "{content/**}": {
      "teambit.mdx/mdx": {}
    },
    "{envs/**}, {extensions/**}": {
      "teambit.harmony/aspect": {}
    },
    "{styles/**}, {constants/**}": {
      "teambit.react/react": "-"
    },
    "{generator/*}": {
      "teambit.harmony/aspect": {}
    }
  }
}