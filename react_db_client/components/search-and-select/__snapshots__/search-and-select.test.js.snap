// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Search and Select Snapshots Default - loading 1`] = `
<styled.div>
  <div
    className="searchAndSelect sas_wrap sectionWrapper"
  >
    <section
      className="sas_filtersSection"
      style={
        Object {
          "display": "flex",
          "justifyContent": "space-between",
        }
      }
    >
      <FilterPanel
        addFilter={[Function]}
        autoOpenPanel={false}
        clearFilters={[Function]}
        customFilters={Object {}}
        customFiltersComponents={Object {}}
        deleteFilter={[Function]}
        fieldsData={
          Object {
            "count": Object {
              "label": "Count",
              "type": "number",
              "uid": "count",
            },
            "filterA": Object {
              "label": "filter A",
              "type": "text",
              "uid": "filterA",
            },
            "filterB": Object {
              "label": "filter B",
              "type": "text",
              "uid": "filterB",
            },
            "filterEmbedded": Object {
              "filters": Object {
                "filterC": Object {
                  "label": "filter C",
                  "type": "text",
                  "uid": "filterC",
                },
                "filterD": Object {
                  "label": "filter D",
                  "type": "text",
                  "uid": "filterD",
                },
              },
              "label": "Embedded Filter",
              "type": "embedded",
              "uid": "filterEmbedded",
            },
            "name": Object {
              "label": "Name",
              "type": "text",
              "uid": "name",
            },
            "select": Object {
              "label": "Select",
              "options": Array [
                Object {
                  "label": "A",
                  "uid": "a",
                },
                Object {
                  "label": "B",
                  "uid": "b",
                },
              ],
              "type": "select",
              "uid": "select",
            },
          }
        }
        filterData={
          Array [
            FilterObjectClass {
              "field": "name",
              "filterOptionId": "name",
              "label": "name",
              "operator": "contains",
              "type": "text",
              "uid": "demoFilterString",
              "value": "Foo",
            },
            FilterObjectClass {
              "field": "count",
              "filterOptionId": "count",
              "label": "count",
              "operator": ">",
              "type": "number",
              "uid": "demoFilterNumber",
              "value": 0,
            },
            FilterObjectClass {
              "field": "select",
              "filterOptionId": "select",
              "label": "select",
              "operator": "contains",
              "type": "select",
              "uid": "demoFilterExpression",
              "value": "a",
            },
          ]
        }
        floating={false}
        showPanelOverride={false}
        updateFieldTarget={[Function]}
        updateFilter={[Function]}
        updateOperator={[Function]}
      />
    </section>
    <section
      className="sas_resultsSection"
      style={
        Object {
          "minWidth": "100%",
        }
      }
    >
      <div
        className="sas_resultsList"
      >
        <div
          style={
            Object {
              "cursor": "progress",
            }
          }
        >
          <StyledSelectList
            autoWidth={true}
            currentSelection={Array []}
            customParsers={Object {}}
            handleSelect={[Function]}
            headings={
              Array [
                Object {
                  "label": "UID",
                  "type": "text",
                  "uid": "uid",
                },
                Object {
                  "label": "Type",
                  "type": "text",
                  "uid": "type",
                },
                Object {
                  "label": "Name",
                  "type": "text",
                  "uid": "name",
                },
              ]
            }
            limitHeight={null}
            listInput={Array []}
            selectionField="uid"
          />
        </div>
        <div
          className="sas_loadingWrap "
          style={
            Object {
              "display": "initial",
            }
          }
        >
          Loading results...
        </div>
      </div>
    </section>
  </div>
</styled.div>
`;

exports[`Search and Select Snapshots Default - with refresh btn 1`] = `
<styled.div>
  <div
    className="searchAndSelect sas_wrap sectionWrapper"
  >
    <section
      className="sas_filtersSection"
      style={
        Object {
          "display": "flex",
          "justifyContent": "space-between",
        }
      }
    >
      <FilterPanel
        addFilter={[Function]}
        autoOpenPanel={false}
        clearFilters={[Function]}
        customFilters={Object {}}
        customFiltersComponents={Object {}}
        deleteFilter={[Function]}
        fieldsData={
          Object {
            "count": Object {
              "label": "Count",
              "type": "number",
              "uid": "count",
            },
            "filterA": Object {
              "label": "filter A",
              "type": "text",
              "uid": "filterA",
            },
            "filterB": Object {
              "label": "filter B",
              "type": "text",
              "uid": "filterB",
            },
            "filterEmbedded": Object {
              "filters": Object {
                "filterC": Object {
                  "label": "filter C",
                  "type": "text",
                  "uid": "filterC",
                },
                "filterD": Object {
                  "label": "filter D",
                  "type": "text",
                  "uid": "filterD",
                },
              },
              "label": "Embedded Filter",
              "type": "embedded",
              "uid": "filterEmbedded",
            },
            "name": Object {
              "label": "Name",
              "type": "text",
              "uid": "name",
            },
            "select": Object {
              "label": "Select",
              "options": Array [
                Object {
                  "label": "A",
                  "uid": "a",
                },
                Object {
                  "label": "B",
                  "uid": "b",
                },
              ],
              "type": "select",
              "uid": "select",
            },
          }
        }
        filterData={
          Array [
            FilterObjectClass {
              "field": "name",
              "filterOptionId": "name",
              "label": "name",
              "operator": "contains",
              "type": "text",
              "uid": "demoFilterString",
              "value": "Foo",
            },
            FilterObjectClass {
              "field": "count",
              "filterOptionId": "count",
              "label": "count",
              "operator": ">",
              "type": "number",
              "uid": "demoFilterNumber",
              "value": 0,
            },
            FilterObjectClass {
              "field": "select",
              "filterOptionId": "select",
              "label": "select",
              "operator": "contains",
              "type": "select",
              "uid": "demoFilterExpression",
              "value": "a",
            },
          ]
        }
        floating={false}
        showPanelOverride={false}
        updateFieldTarget={[Function]}
        updateFilter={[Function]}
        updateOperator={[Function]}
      />
      <button
        className="button-reset refreshBtn"
        onClick={[Function]}
        style={
          Object {
            "fontSize": "1.5rem",
            "height": "2rem",
            "textAlign": "center",
            "width": "2rem",
          }
        }
        type="button"
      >
        <Emoji
          className=""
          emoj="ðŸ”„"
          label="refresh"
        />
      </button>
    </section>
    <section
      className="sas_resultsSection"
      style={
        Object {
          "minWidth": "100%",
        }
      }
    >
      <div
        className="sas_resultsList"
      >
        <div
          style={
            Object {
              "cursor": "progress",
            }
          }
        >
          <StyledSelectList
            autoWidth={true}
            currentSelection={Array []}
            customParsers={Object {}}
            handleSelect={[Function]}
            headings={
              Array [
                Object {
                  "label": "UID",
                  "type": "text",
                  "uid": "uid",
                },
                Object {
                  "label": "Type",
                  "type": "text",
                  "uid": "type",
                },
                Object {
                  "label": "Name",
                  "type": "text",
                  "uid": "name",
                },
              ]
            }
            limitHeight={null}
            listInput={Array []}
            selectionField="uid"
          />
        </div>
        <div
          className="sas_loadingWrap "
          style={
            Object {
              "display": "initial",
            }
          }
        >
          Loading results...
        </div>
      </div>
    </section>
  </div>
</styled.div>
`;

exports[`Search and Select Snapshots Default - with results 1`] = `
<styled.div>
  <div
    className="searchAndSelect sas_wrap sectionWrapper"
  >
    <section
      className="sas_filtersSection"
      style={
        Object {
          "display": "flex",
          "justifyContent": "space-between",
        }
      }
    >
      <FilterPanel
        addFilter={[Function]}
        autoOpenPanel={false}
        clearFilters={[Function]}
        customFilters={Object {}}
        customFiltersComponents={Object {}}
        deleteFilter={[Function]}
        fieldsData={
          Object {
            "count": Object {
              "label": "Count",
              "type": "number",
              "uid": "count",
            },
            "filterA": Object {
              "label": "filter A",
              "type": "text",
              "uid": "filterA",
            },
            "filterB": Object {
              "label": "filter B",
              "type": "text",
              "uid": "filterB",
            },
            "filterEmbedded": Object {
              "filters": Object {
                "filterC": Object {
                  "label": "filter C",
                  "type": "text",
                  "uid": "filterC",
                },
                "filterD": Object {
                  "label": "filter D",
                  "type": "text",
                  "uid": "filterD",
                },
              },
              "label": "Embedded Filter",
              "type": "embedded",
              "uid": "filterEmbedded",
            },
            "name": Object {
              "label": "Name",
              "type": "text",
              "uid": "name",
            },
            "select": Object {
              "label": "Select",
              "options": Array [
                Object {
                  "label": "A",
                  "uid": "a",
                },
                Object {
                  "label": "B",
                  "uid": "b",
                },
              ],
              "type": "select",
              "uid": "select",
            },
          }
        }
        filterData={
          Array [
            FilterObjectClass {
              "field": "name",
              "filterOptionId": "name",
              "label": "name",
              "operator": "contains",
              "type": "text",
              "uid": "demoFilterString",
              "value": "Foo",
            },
            FilterObjectClass {
              "field": "count",
              "filterOptionId": "count",
              "label": "count",
              "operator": ">",
              "type": "number",
              "uid": "demoFilterNumber",
              "value": 0,
            },
            FilterObjectClass {
              "field": "select",
              "filterOptionId": "select",
              "label": "select",
              "operator": "contains",
              "type": "select",
              "uid": "demoFilterExpression",
              "value": "a",
            },
          ]
        }
        floating={false}
        showPanelOverride={false}
        updateFieldTarget={[Function]}
        updateFilter={[Function]}
        updateOperator={[Function]}
      />
    </section>
    <section
      className="sas_resultsSection"
      style={
        Object {
          "minWidth": "100%",
        }
      }
    >
      <div
        className="sas_resultsList"
      >
        <div
          style={
            Object {
              "cursor": "default",
            }
          }
        >
          <StyledSelectList
            autoWidth={true}
            currentSelection={Array []}
            customParsers={Object {}}
            handleSelect={[MockFunction handleItemSelect]}
            headings={
              Array [
                Object {
                  "label": "UID",
                  "type": "text",
                  "uid": "uid",
                },
                Object {
                  "label": "Type",
                  "type": "text",
                  "uid": "type",
                },
                Object {
                  "label": "Name",
                  "type": "text",
                  "uid": "name",
                },
              ]
            }
            limitHeight={null}
            listInput={
              Array [
                Object {
                  "label": "Result 1",
                  "name": "This thing 1",
                  "type": "text",
                  "uid": "1",
                },
                Object {
                  "label": "Result 2",
                  "name": "This thing 2",
                  "type": "text",
                  "uid": "2",
                },
                Object {
                  "label": "Result 3",
                  "name": "This thing 3",
                  "type": "text",
                  "uid": "3",
                },
              ]
            }
            selectionField="uid"
          />
        </div>
      </div>
    </section>
  </div>
</styled.div>
`;

exports[`Search and Select Snapshots Default - with search field 1`] = `
<styled.div>
  <div
    className="searchAndSelect sas_wrap sectionWrapper"
  >
    <section
      className="sas_filtersSection"
      style={
        Object {
          "display": "flex",
          "justifyContent": "space-between",
        }
      }
    >
      <FilterPanel
        addFilter={[Function]}
        autoOpenPanel={false}
        clearFilters={[Function]}
        customFilters={Object {}}
        customFiltersComponents={Object {}}
        deleteFilter={[Function]}
        fieldsData={
          Object {
            "count": Object {
              "label": "Count",
              "type": "number",
              "uid": "count",
            },
            "filterA": Object {
              "label": "filter A",
              "type": "text",
              "uid": "filterA",
            },
            "filterB": Object {
              "label": "filter B",
              "type": "text",
              "uid": "filterB",
            },
            "filterEmbedded": Object {
              "filters": Object {
                "filterC": Object {
                  "label": "filter C",
                  "type": "text",
                  "uid": "filterC",
                },
                "filterD": Object {
                  "label": "filter D",
                  "type": "text",
                  "uid": "filterD",
                },
              },
              "label": "Embedded Filter",
              "type": "embedded",
              "uid": "filterEmbedded",
            },
            "name": Object {
              "label": "Name",
              "type": "text",
              "uid": "name",
            },
            "select": Object {
              "label": "Select",
              "options": Array [
                Object {
                  "label": "A",
                  "uid": "a",
                },
                Object {
                  "label": "B",
                  "uid": "b",
                },
              ],
              "type": "select",
              "uid": "select",
            },
          }
        }
        filterData={
          Array [
            FilterObjectClass {
              "field": "name",
              "filterOptionId": "name",
              "label": "name",
              "operator": "contains",
              "type": "text",
              "uid": "demoFilterString",
              "value": "Foo",
            },
            FilterObjectClass {
              "field": "count",
              "filterOptionId": "count",
              "label": "count",
              "operator": ">",
              "type": "number",
              "uid": "demoFilterNumber",
              "value": 0,
            },
            FilterObjectClass {
              "field": "select",
              "filterOptionId": "select",
              "label": "select",
              "operator": "contains",
              "type": "select",
              "uid": "demoFilterExpression",
              "value": "a",
            },
          ]
        }
        floating={false}
        showPanelOverride={false}
        updateFieldTarget={[Function]}
        updateFilter={[Function]}
        updateOperator={[Function]}
      />
      <div
        style={
          Object {
            "display": "flex",
            "flexGrow": 1,
            "marginLeft": "1rem",
          }
        }
      >
        <label>
          Search: 
        </label>
        <input
          aria-label="search"
          className="searchField"
          onChange={[Function]}
          placeholder="search..."
          style={
            Object {
              "flexGrow": 1,
            }
          }
          type="text"
          value=""
        />
      </div>
    </section>
    <section
      className="sas_resultsSection"
      style={
        Object {
          "minWidth": "100%",
        }
      }
    >
      <div
        className="sas_resultsList"
      >
        <div
          style={
            Object {
              "cursor": "progress",
            }
          }
        >
          <StyledSelectList
            autoWidth={true}
            currentSelection={Array []}
            customParsers={Object {}}
            handleSelect={[Function]}
            headings={
              Array [
                Object {
                  "label": "UID",
                  "type": "text",
                  "uid": "uid",
                },
                Object {
                  "label": "Type",
                  "type": "text",
                  "uid": "type",
                },
                Object {
                  "label": "Name",
                  "type": "text",
                  "uid": "name",
                },
              ]
            }
            limitHeight={null}
            listInput={Array []}
            selectionField="uid"
          />
        </div>
        <div
          className="sas_loadingWrap "
          style={
            Object {
              "display": "initial",
            }
          }
        >
          Loading results...
        </div>
      </div>
    </section>
  </div>
</styled.div>
`;

exports[`Search and Select Snapshots Default 1`] = `
<styled.div>
  <div
    className="searchAndSelect sas_wrap sectionWrapper"
  >
    <section
      className="sas_filtersSection"
      style={
        Object {
          "display": "flex",
          "justifyContent": "space-between",
        }
      }
    >
      <FilterPanel
        addFilter={[Function]}
        autoOpenPanel={false}
        clearFilters={[Function]}
        customFilters={Object {}}
        customFiltersComponents={Object {}}
        deleteFilter={[Function]}
        fieldsData={
          Object {
            "count": Object {
              "label": "Count",
              "type": "number",
              "uid": "count",
            },
            "filterA": Object {
              "label": "filter A",
              "type": "text",
              "uid": "filterA",
            },
            "filterB": Object {
              "label": "filter B",
              "type": "text",
              "uid": "filterB",
            },
            "filterEmbedded": Object {
              "filters": Object {
                "filterC": Object {
                  "label": "filter C",
                  "type": "text",
                  "uid": "filterC",
                },
                "filterD": Object {
                  "label": "filter D",
                  "type": "text",
                  "uid": "filterD",
                },
              },
              "label": "Embedded Filter",
              "type": "embedded",
              "uid": "filterEmbedded",
            },
            "name": Object {
              "label": "Name",
              "type": "text",
              "uid": "name",
            },
            "select": Object {
              "label": "Select",
              "options": Array [
                Object {
                  "label": "A",
                  "uid": "a",
                },
                Object {
                  "label": "B",
                  "uid": "b",
                },
              ],
              "type": "select",
              "uid": "select",
            },
          }
        }
        filterData={
          Array [
            FilterObjectClass {
              "field": "name",
              "filterOptionId": "name",
              "label": "name",
              "operator": "contains",
              "type": "text",
              "uid": "demoFilterString",
              "value": "Foo",
            },
            FilterObjectClass {
              "field": "count",
              "filterOptionId": "count",
              "label": "count",
              "operator": ">",
              "type": "number",
              "uid": "demoFilterNumber",
              "value": 0,
            },
            FilterObjectClass {
              "field": "select",
              "filterOptionId": "select",
              "label": "select",
              "operator": "contains",
              "type": "select",
              "uid": "demoFilterExpression",
              "value": "a",
            },
          ]
        }
        floating={false}
        showPanelOverride={false}
        updateFieldTarget={[Function]}
        updateFilter={[Function]}
        updateOperator={[Function]}
      />
    </section>
    <section
      className="sas_resultsSection"
      style={
        Object {
          "minWidth": "100%",
        }
      }
    >
      <div
        className="sas_resultsList"
      >
        <div
          style={
            Object {
              "cursor": "default",
            }
          }
        >
          <StyledSelectList
            autoWidth={true}
            currentSelection={Array []}
            customParsers={Object {}}
            handleSelect={[MockFunction handleItemSelect]}
            headings={
              Array [
                Object {
                  "label": "UID",
                  "type": "text",
                  "uid": "uid",
                },
                Object {
                  "label": "Type",
                  "type": "text",
                  "uid": "type",
                },
                Object {
                  "label": "Name",
                  "type": "text",
                  "uid": "name",
                },
              ]
            }
            limitHeight={null}
            listInput={Array []}
            selectionField="uid"
          />
        </div>
        <div
          className="sas_resultsList-empty"
        >
          No results found. Try adjusting the filters above.
        </div>
      </div>
    </section>
  </div>
</styled.div>
`;

exports[`Search and Select Snapshots Multiple - with live update 1`] = `
<styled.div>
  <div
    className="searchAndSelect sas_wrap sectionWrapper"
  >
    <section
      className="sas_filtersSection"
      style={
        Object {
          "display": "flex",
          "justifyContent": "space-between",
        }
      }
    >
      <FilterPanel
        addFilter={[Function]}
        autoOpenPanel={false}
        clearFilters={[Function]}
        customFilters={Object {}}
        customFiltersComponents={Object {}}
        deleteFilter={[Function]}
        fieldsData={
          Object {
            "count": Object {
              "label": "Count",
              "type": "number",
              "uid": "count",
            },
            "filterA": Object {
              "label": "filter A",
              "type": "text",
              "uid": "filterA",
            },
            "filterB": Object {
              "label": "filter B",
              "type": "text",
              "uid": "filterB",
            },
            "filterEmbedded": Object {
              "filters": Object {
                "filterC": Object {
                  "label": "filter C",
                  "type": "text",
                  "uid": "filterC",
                },
                "filterD": Object {
                  "label": "filter D",
                  "type": "text",
                  "uid": "filterD",
                },
              },
              "label": "Embedded Filter",
              "type": "embedded",
              "uid": "filterEmbedded",
            },
            "name": Object {
              "label": "Name",
              "type": "text",
              "uid": "name",
            },
            "select": Object {
              "label": "Select",
              "options": Array [
                Object {
                  "label": "A",
                  "uid": "a",
                },
                Object {
                  "label": "B",
                  "uid": "b",
                },
              ],
              "type": "select",
              "uid": "select",
            },
          }
        }
        filterData={
          Array [
            FilterObjectClass {
              "field": "name",
              "filterOptionId": "name",
              "label": "name",
              "operator": "contains",
              "type": "text",
              "uid": "demoFilterString",
              "value": "Foo",
            },
            FilterObjectClass {
              "field": "count",
              "filterOptionId": "count",
              "label": "count",
              "operator": ">",
              "type": "number",
              "uid": "demoFilterNumber",
              "value": 0,
            },
            FilterObjectClass {
              "field": "select",
              "filterOptionId": "select",
              "label": "select",
              "operator": "contains",
              "type": "select",
              "uid": "demoFilterExpression",
              "value": "a",
            },
          ]
        }
        floating={false}
        showPanelOverride={false}
        updateFieldTarget={[Function]}
        updateFilter={[Function]}
        updateOperator={[Function]}
      />
    </section>
    <section
      className="sas_resultsSection"
      style={
        Object {
          "minWidth": "100%",
        }
      }
    >
      <div
        className="sas_resultsList"
      >
        <div
          style={
            Object {
              "cursor": "progress",
            }
          }
        >
          <StyledSelectList
            autoWidth={true}
            currentSelection={Array []}
            customParsers={Object {}}
            handleSelect={[Function]}
            headings={
              Array [
                Object {
                  "label": "UID",
                  "type": "text",
                  "uid": "uid",
                },
                Object {
                  "label": "Type",
                  "type": "text",
                  "uid": "type",
                },
                Object {
                  "label": "Name",
                  "type": "text",
                  "uid": "name",
                },
              ]
            }
            limitHeight={null}
            listInput={Array []}
            selectionField="uid"
          />
        </div>
        <div
          className="sas_loadingWrap "
          style={
            Object {
              "display": "initial",
            }
          }
        >
          Loading results...
        </div>
      </div>
    </section>
    <section
      className="sas_manageSelectionSection"
    >
      <button
        className="button-one selectAllBtn"
        onClick={[MockFunction selectAll]}
        type="button"
      >
        Select All
      </button>
      <button
        className="button-one clearSelectionButton"
        onClick={[MockFunction clearSelection]}
        type="button"
      >
        Clear Selection
      </button>
    </section>
  </div>
</styled.div>
`;
