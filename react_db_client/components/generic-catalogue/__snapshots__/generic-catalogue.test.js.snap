// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CertificateCatalogue Matches Snapshot 1`] = `
"<BasicGenericCatalogue>
  <GenericCatalogue id=\\"demo-id\\" itemName=\\"Demo Item\\" collection=\\"DEMO COLLECTION\\" additionalFilters={{...}} availableFilters={{...}} resultsHeadings={{...}} editorHeadings={{...}} additionalSaveData={{...}} ItemEditor={[Function (anonymous)]} apiDeleteDocuments={[Function: apiDeleteDocuments]} PopupPanel={[Function: PopupPanelConnected]} notificationDispatch={[Function (anonymous)]} asyncGetDocument={[Function: asyncGetDocument]} asyncGetDocuments={[Function: asyncGetDocuments]} asyncPutDocument={[Function: asyncPutDocument]} asyncPostDocument={[Function: asyncPostDocument]} asyncDeleteDocument={[Function: asyncDeleteDocument]} asyncDeleteDocuments={[Function: asyncDeleteDocuments]} componentMap={{...}} onError={[Function: onError]} customSort={{...}} previewHeadings={{...}} customParsers={{...}}>
    <div className=\\"genericCatalogueFunc_Wrap sectionWrapper genericCatalogue_demo-id\\">
      <section>
        <button type=\\"button\\" className=\\"button-two genericCatalogue_createNewBtn\\" onClick={[Function: onClick]}>
          Create New 
          Demo Item
        </button>
      </section>
      <section style={{...}}>
        <p>
          <b>
            Adjust the filters below to search for 
            Demo Item
            s
          </b>
        </p>
        <SearchAndSelect searchFunction={[Function (anonymous)]} initialFilters={{...}} availableFilters={{...}} handleSelect={[Function: bound dispatchAction]} headings={{...}} previewHeadings={{...}} customParsers={{...}} autoWidth={false} autoUpdate={true} showRefreshBtn={true} showSearchField={true} loadOnInit={false} noEmptySearch={true} allowSelectionPreview={true} selectionOverride={{...}} allowFilters={true} allowMultiple={false} returnFieldOnSelect=\\"uid\\" searchFieldTargetField={{...}} acceptSelectionBtnText=\\"Accept Selection\\" limitResultHeight={{...}} sortBy=\\"uid\\" reverseSort={false} reloadKey={0} liveUpdate={false} labelField=\\"label\\" autoPreview={false}>
          <div className=\\"searchAndSelect sas_wrap sectionWrapper\\">
            <section className=\\"sas_filtersSection\\" style={{...}}>
              <button type=\\"button\\" className=\\"button-one\\" onClick={[Function: onClick]}>
                Show Preview
              </button>
              <FilterPanel filterData={{...}} clearFilters={[Function: handleClearFilters]} addFilter={[Function: addFilter]} deleteFilter={[Function: deleteFilter]} updateFilter={[Function: updateFilter]} fieldsData={{...}} showPanelOverride={false} floating={false} autoOpenPanel={false} customFilters={{...}} customFiltersComponents={{...}}>
                <div className=\\"filterManager\\">
                  <button type=\\"button\\" className=\\"button-one openFiltersButton\\" onClick={[Function: onClick]}>
                    Filters
                  </button>
                  <div className=\\"filterPanel_panel \\" style={{...}}>
                    <FiltersList filterData={{...}} deleteFilter={[Function: deleteFilter]} updateFilter={[Function: updateFilter]} fieldsData={{...}} customFilters={{...}} customFiltersComponents={{...}}>
                      <ul className=\\"filterPanel_filterList\\">
                        No filters
                      </ul>
                    </FiltersList>
                    <button type=\\"button\\" className=\\"button-one\\" onClick={[Function: onClick]}>
                      Clear Filters
                    </button>
                    <AddFilterButton fieldsData={{...}} returnNewFilter={[Function: returnNewFilter]} customFilters={{...}}>
                      <button type=\\"button\\" className=\\"button-two addFilterBtn\\" onClick={[Function: handleNewFilter]}>
                        Add Filter
                      </button>
                    </AddFilterButton>
                  </div>
                </div>
              </FilterPanel>
              <div style={{...}}>
                <label>
                  Search: 
                </label>
                <input className=\\"searchField\\" style={{...}} aria-label=\\"search\\" type=\\"text\\" placeholder=\\"search...\\" value=\\"\\" onChange={[Function: handleSearchFieldInput]} />
              </div>
              <button type=\\"button\\" className=\\"button-reset refreshBtn\\" onClick={[Function: onClick]} style={{...}}>
                <Emoji emoj=\\"üîÑ\\" label=\\"refresh\\" className=\\"\\">
                  <span className=\\"emoji \\" role=\\"img\\" aria-label=\\"refresh\\">
                    üîÑ
                  </span>
                </Emoji>
              </button>
            </section>
            <section className=\\"sas_resultsSection\\" style={{...}}>
              <div className=\\"sas_resultsList\\">
                <div style={{...}}>
                  <StyledSelectList listInput={{...}} headings={{...}} handleSelect={[Function: handleItemSelect]} currentSelection={{...}} limitHeight={{...}} selectionField=\\"uid\\" autoWidth={false} customParsers={{...}}>
                    <div className=\\"styledList\\" style={{...}}>
                      <div style={{...}} className=\\"styledList_headings\\">
                        <div className=\\"styledList_heading\\" style={{...}}>
                          UID
                        </div>
                        <div className=\\"styledList_heading\\" style={{...}}>
                          Name
                        </div>
                        <div className=\\"styledList_heading\\" style={{...}}>
                          Count
                        </div>
                        <div className=\\"styledList_heading\\" style={{...}}>
                          Eval
                        </div>
                      </div>
                      <div style={{...}} className=\\"styledList_items \\" role=\\"list\\" />
                    </div>
                  </StyledSelectList>
                </div>
                <div className=\\"sas_resultsList-empty\\">
                  No results found. Try adjusting the filters above.
                </div>
              </div>
            </section>
          </div>
        </SearchAndSelect>
        <div>
          <button type=\\"button\\" className=\\"button-two genericCatalogue_editSelectedBtn\\" onClick={[Function: onClick]} disabled={true}>
            Edit Selected 
            Demo Item
          </button>
          <button type=\\"button\\" className=\\"button-one genericCatalogue_duplicateSelectedBtn\\" onClick={[Function: onClick]} disabled={true}>
            Duplicate Selected 
            Demo Item
          </button>
          <AreYouSureBtn onConfirmed={[Function: onConfirmed]} message=\\"Delete Demo Item\\" disabled={true} btnText={{...}} PopupPanel={[Function: PopupPanelConnected]} className=\\"button-one\\" notes=\\"\\" confirmMessage=\\"Confirm\\">
            <PopupPanelConnected id=\\"areYouSureBtn_popupPanel\\" isOpen={false} handleClose={[Function: handleClose]}>
              <PopupPanel popupRoot=\\"root\\" id=\\"areYouSureBtn_popupPanel\\" isOpen={false} handleClose={[Function: handleClose]} renderWhenClosed={false} />
            </PopupPanelConnected>
            <button disabled={true} onClick={[Function: onClick]} type=\\"button\\" className=\\"areYouSureBtn button-one\\">
              <Emoji emoj=\\"üóëÔ∏è\\" label=\\"Delete\\" className=\\"\\">
                <span className=\\"emoji \\" role=\\"img\\" aria-label=\\"Delete\\">
                  üóëÔ∏è
                </span>
              </Emoji>
            </button>
          </AreYouSureBtn>
        </div>
      </section>
    </div>
  </GenericCatalogue>
</BasicGenericCatalogue>"
`;
