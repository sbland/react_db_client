// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CertificateCatalogue Matches Snapshot 1`] = `
"<BasicGenericCatalogue>
  <GenericCatalogue id=\\"demo-id\\" itemName=\\"Demo Item\\" collection=\\"DEMO COLLECTION\\" additionalFilters={{...}} availableFilters={{...}} resultsHeadings={{...}} previewHeadings={{...}} editorHeadings={{...}} additionalSaveData={{...}} ItemEditor={[Function (anonymous)]} PopupPanel={[Function: PopupPanelConnected]} notificationDispatch={[Function (anonymous)]} asyncGetDocument={[Function: asyncGetDocument]} asyncGetDocuments={[Function: asyncGetDocuments]} asyncPutDocument={[Function: asyncPutDocument]} asyncPostDocument={[Function: asyncPostDocument]} asyncDeleteDocument={[Function: asyncDeleteDocument]} asyncCopyDocument={[Function: asyncCopyDocument]} componentMap={{...}} customSort={{...}} customParsers={{...}} errorCallback={[Function: errorCallback]} closePopupOnItemSave={false}>
    <div className=\\"genericCatalogueFunc_Wrap sectionWrapper genericCatalogue_demo-id\\">
      <section>
        <button type=\\"button\\" className=\\"button-two genericCatalogue_createNewBtn\\" onClick={[Function: onClick]}>
          Create New 
          Demo Item
        </button>
      </section>
      <section style={{...}}>
        <p>
          <b>
            Adjust the filters below to search for 
            Demo Item
            s
          </b>
        </p>
        <SearchAndSelect searchFunction={[Function (anonymous)]} initialFilters={{...}} availableFilters={{...}} handleSelect={[Function (anonymous)]} headings={{...}} previewHeadings={{...}} customParsers={{...}} autoUpdate={true} showRefreshBtn={true} showSearchField={true} loadOnInit={false} noEmptySearch={true} allowSelectionPreview={true} selectionOverride={{...}} allowFilters={true} allowMultiple={false} returnFieldOnSelect=\\"uid\\" searchFieldTargetField={{...}} acceptSelectionBtnText=\\"Accept Selection\\" limitResultHeight={{...}} sortBy=\\"uid\\" reverseSort={false} reloadKey={0} liveUpdate={false} autoWidth={true} labelField=\\"label\\" autoPreview={false}>
          <styled.div>
            <div className=\\"sc-ehvNnt jtUYlD\\">
              <div className=\\"searchAndSelect sas_wrap sectionWrapper\\">
                <section className=\\"sas_filtersSection\\" style={{...}}>
                  <button type=\\"button\\" className=\\"button-one\\" onClick={[Function: onClick]}>
                    Show Preview
                  </button>
                  <FilterPanel filterData={{...}} addFilter={[Function: addFilter]} deleteFilter={[Function: deleteFilter]} updateFilter={[Function: updateFilter]} clearFilters={[Function: handleClearFilters]} updateFieldTarget={[Function: updateFieldTarget]} updateOperator={[Function: updateOperator]} fieldsData={{...}} showPanelOverride={false} floating={false} autoOpenPanel={false} customFilters={{...}} customFiltersComponents={{...}}>
                    <div className=\\"filterManager\\">
                      <button type=\\"button\\" className=\\"button-one openFiltersButton\\" onClick={[Function: onClick]}>
                        Filters
                      </button>
                      <div className=\\"filterPanel_panel \\" style={{...}}>
                        <FiltersList filterData={{...}} deleteFilter={[Function: deleteFilter]} updateFilter={[Function: updateFilter]} fieldsData={{...}} customFilters={{...}} customFiltersComponents={{...}} updateFieldTarget={[Function: updateFieldTarget]} updateOperator={[Function: updateOperator]}>
                          <div>
                            <styled.div>
                              <div className=\\"sc-AHaJN dKqwOJ\\">
                                <Styled(styled.div)>
                                  <div className=\\"sc-khsqcC sc-hTBuwn gTmAxE ixcWmP\\" />
                                </Styled(styled.div)>
                                <Styled(styled.div)>
                                  <div className=\\"sc-khsqcC sc-jfTVlA gTmAxE feHWhD\\">
                                    <label>
                                      Field
                                    </label>
                                  </div>
                                </Styled(styled.div)>
                                <Styled(styled.div)>
                                  <div className=\\"sc-khsqcC sc-gScZFl gTmAxE jLsgAI\\">
                                    <label>
                                      Operator
                                    </label>
                                  </div>
                                </Styled(styled.div)>
                                <Styled(styled.div)>
                                  <div className=\\"sc-khsqcC sc-lbVpMG gTmAxE bhweQq\\">
                                    <label>
                                      Value
                                    </label>
                                  </div>
                                </Styled(styled.div)>
                              </div>
                            </styled.div>
                            <styled.ul className=\\"filterPanel_filterList\\">
                              <ul className=\\"sc-bCfvAP clBlND filterPanel_filterList\\">
                                No filters
                              </ul>
                            </styled.ul>
                          </div>
                        </FiltersList>
                        <button type=\\"button\\" className=\\"button-one\\" onClick={[Function: onClick]}>
                          Clear Filters
                        </button>
                        <AddFilterButton fieldsData={{...}} returnNewFilter={[Function: returnNewFilter]} customFilters={{...}}>
                          <button type=\\"button\\" className=\\"button-two addFilterBtn\\" onClick={[Function: handleNewFilter]}>
                            Add Filter
                          </button>
                        </AddFilterButton>
                      </div>
                    </div>
                  </FilterPanel>
                  <div style={{...}}>
                    <label>
                      Search: 
                    </label>
                    <input className=\\"searchField\\" style={{...}} aria-label=\\"search\\" type=\\"text\\" placeholder=\\"search...\\" value=\\"\\" onChange={[Function: handleSearchFieldInput]} />
                  </div>
                  <button type=\\"button\\" className=\\"button-reset refreshBtn\\" onClick={[Function: onClick]} style={{...}}>
                    <Emoji emoj=\\"🔄\\" label=\\"refresh\\" className=\\"\\">
                      <styled.span className=\\"emoji \\" role=\\"img\\" aria-label=\\"refresh\\">
                        <span className=\\"sc-jOiSOi kAGlAj emoji \\" role=\\"img\\" aria-label=\\"refresh\\">
                          🔄
                        </span>
                      </styled.span>
                    </Emoji>
                  </button>
                </section>
                <section className=\\"sas_resultsSection\\" style={{...}}>
                  <div className=\\"sas_resultsList\\">
                    <div style={{...}}>
                      <StyledSelectList listInput={{...}} headings={{...}} handleSelect={[Function (anonymous)]} currentSelection={{...}} limitHeight={{...}} selectionField=\\"uid\\" autoWidth={true} customParsers={{...}} liveColumnWidthDragging={false}>
                        <styled.div style={{...}} data-testid=\\"styledSelectList\\">
                          <div style={{...}} data-testid=\\"styledSelectList\\" className=\\"sc-cjibBx hHeELA\\">
                            <styled.div style={{...}}>
                              <div style={{...}} className=\\"sc-jcMfQk dntdJq\\">
                                <styled.div style={{...}}>
                                  <div style={{...}} className=\\"sc-eeMvmM llszaG\\">
                                    UID
                                  </div>
                                </styled.div>
                                <styled.div style={{...}}>
                                  <div style={{...}} className=\\"sc-eeMvmM llszaG\\">
                                    Name
                                  </div>
                                </styled.div>
                                <styled.div style={{...}}>
                                  <div style={{...}} className=\\"sc-eeMvmM llszaG\\">
                                    Count
                                  </div>
                                </styled.div>
                                <styled.div style={{...}}>
                                  <div style={{...}} className=\\"sc-eeMvmM llszaG\\">
                                    Eval
                                  </div>
                                </styled.div>
                              </div>
                            </styled.div>
                            <styled.ul limitHeight={false} style={{...}}>
                              <ul style={{...}} className=\\"sc-cabOPr iZLcJB\\" />
                            </styled.ul>
                            <ColumnWidthManagerRender resizeColumn={[Function: resizeColumn]} resizingColumn={false} liveColumnWidths={{...}} columnEdgePositions={{...}} onMouseDownResizeHandle={[Function: onMouseDownResizeHandle]} mouseOverEdge={[Function: mouseOverEdge]} endDragging={[Function: endDragging]} handlePosition={-1} tableWidth={403}>
                              <styled.div className=\\"columnWidthManager_styles\\" style={{...}}>
                                <div className=\\"sc-cCjUiG dzXSHP columnWidthManager_styles\\" style={{...}}>
                                  <div className=\\"columnWidthManager\\" style={{...}}>
                                    <div style={{...}} onMouseDown={[Function: onMouseDownResizeHandle]} onMouseEnter={[Function: onMouseEnter]}>
                                      <div style={{...}} />
                                    </div>
                                    <div style={{...}} onMouseDown={[Function: onMouseDownResizeHandle]} onMouseEnter={[Function: onMouseEnter]}>
                                      <div style={{...}} />
                                    </div>
                                    <div style={{...}} onMouseDown={[Function: onMouseDownResizeHandle]} onMouseEnter={[Function: onMouseEnter]}>
                                      <div style={{...}} />
                                    </div>
                                    <div style={{...}} onMouseDown={[Function: onMouseDownResizeHandle]} onMouseEnter={[Function: onMouseEnter]}>
                                      <div style={{...}} />
                                    </div>
                                    <div className=\\"columnResizeCanvas\\" style={{...}} onMouseUp={[Function: onMouseUp]} onMouseLeave={[Function: onMouseLeave]} onMouseMove={[Function: onMouseMove]} />
                                    <div className=\\"columnResizeHandle\\" style={{...}} onMouseDown={[Function: onMouseDownResizeHandle]} onMouseUp={[Function: endDragging]} />
                                  </div>
                                </div>
                              </styled.div>
                            </ColumnWidthManagerRender>
                          </div>
                        </styled.div>
                      </StyledSelectList>
                    </div>
                    <div className=\\"sas_resultsList-empty\\">
                      No results found. Try adjusting the filters above.
                    </div>
                  </div>
                </section>
              </div>
            </div>
          </styled.div>
        </SearchAndSelect>
        <div>
          <button type=\\"button\\" className=\\"button-two genericCatalogue_editSelectedBtn\\" onClick={[Function: onClick]} disabled={true}>
            Edit Selected 
            Demo Item
          </button>
          <button type=\\"button\\" className=\\"button-one genericCatalogue_duplicateSelectedBtn\\" onClick={[Function: onClick]} disabled={true}>
            Duplicate Selected 
            Demo Item
          </button>
          <AreYouSureBtn onConfirmed={[Function: onConfirmed]} message=\\"Delete Demo Item\\" disabled={true} btnText={{...}} PopupPanel={[Function: PopupPanelConnected]} className=\\"button-one\\" notes=\\"\\" confirmMessage=\\"Confirm\\">
            <PopupPanelConnected id=\\"areYouSureBtn_popupPanel\\" isOpen={false} handleClose={[Function: handleClose]}>
              <PopupPanel popupRoot=\\"root\\" id=\\"areYouSureBtn_popupPanel\\" isOpen={false} handleClose={[Function: handleClose]} renderWhenClosed={false} />
            </PopupPanelConnected>
            <button disabled={true} onClick={[Function: onClick]} type=\\"button\\" className=\\"areYouSureBtn button-one\\">
              <Emoji emoj=\\"🗑️\\" label=\\"Delete\\" className=\\"\\">
                <styled.span className=\\"emoji \\" role=\\"img\\" aria-label=\\"Delete\\">
                  <span className=\\"sc-jOiSOi kAGlAj emoji \\" role=\\"img\\" aria-label=\\"Delete\\">
                    🗑️
                  </span>
                </styled.span>
              </Emoji>
            </button>
          </AreYouSureBtn>
        </div>
      </section>
    </div>
  </GenericCatalogue>
</BasicGenericCatalogue>"
`;
